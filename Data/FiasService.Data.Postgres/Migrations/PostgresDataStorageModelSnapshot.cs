// <auto-generated />
using System;
using FiasService.Data.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FiasService.Data.Postgres.Migrations
{
    [DbContext(typeof(PostgresDataStorage))]
    partial class PostgresDataStorageModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FiasService.Data.Common.Entities.FiasAddressObject", b =>
                {
                    b.Property<Guid>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recid");

                    b.Property<int>("ActStatus")
                        .HasColumnName("actstatus");

                    b.Property<int>("AoLevel")
                        .HasColumnName("aolevel");

                    b.Property<Guid>("Aoguid")
                        .HasColumnName("aoguid");

                    b.Property<Guid>("Aoid")
                        .HasColumnName("aoid");

                    b.Property<string>("AreaCode")
                        .HasColumnName("areacode");

                    b.Property<string>("AutoCode")
                        .HasColumnName("autocode");

                    b.Property<string>("CadNum")
                        .HasColumnName("cadnum");

                    b.Property<int>("CentStatus")
                        .HasColumnName("centstatus");

                    b.Property<string>("CityCode")
                        .HasColumnName("citycode");

                    b.Property<string>("Code")
                        .HasColumnName("code");

                    b.Property<string>("CtarCode")
                        .HasColumnName("ctarcode");

                    b.Property<int>("CurrStatus")
                        .HasColumnName("currstatus");

                    b.Property<int>("DivType")
                        .HasColumnName("divtype");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("enddate");

                    b.Property<string>("ExtrCode")
                        .HasColumnName("extrcode");

                    b.Property<string>("FormalName")
                        .HasColumnName("formalname");

                    b.Property<string>("IfnsFl")
                        .HasColumnName("ifnsfl");

                    b.Property<string>("IfnsUl")
                        .HasColumnName("ifnsul");

                    b.Property<int>("LiveStatus")
                        .HasColumnName("livestatus");

                    b.Property<Guid>("NextId")
                        .HasColumnName("nextid");

                    b.Property<string>("NormDoc")
                        .HasColumnName("normdoc");

                    b.Property<string>("OffName")
                        .HasColumnName("offname");

                    b.Property<string>("Okato")
                        .HasColumnName("okato");

                    b.Property<string>("Oktmo")
                        .HasColumnName("oktmo");

                    b.Property<int>("OperStatus")
                        .HasColumnName("operstatus");

                    b.Property<Guid>("ParentGuid")
                        .HasColumnName("parentguid");

                    b.Property<string>("PlaceCode")
                        .HasColumnName("placecode");

                    b.Property<string>("PlainCode")
                        .HasColumnName("plaincode");

                    b.Property<string>("PlanCode")
                        .HasColumnName("plancode");

                    b.Property<string>("PostalCode")
                        .HasColumnName("postalcode");

                    b.Property<Guid>("PrevId")
                        .HasColumnName("previd");

                    b.Property<string>("RecCode")
                        .HasColumnName("reccode");

                    b.Property<DateTime>("RecCreated")
                        .HasColumnName("reccreated");

                    b.Property<string>("RecCreatedBy")
                        .IsRequired()
                        .HasColumnName("reccreatedby");

                    b.Property<string>("RecDescription")
                        .HasColumnName("recdescription");

                    b.Property<string>("RecName")
                        .IsRequired()
                        .HasColumnName("recname");

                    b.Property<int>("RecState")
                        .HasColumnName("recstate");

                    b.Property<DateTime>("RecUpdated")
                        .HasColumnName("recupdated");

                    b.Property<string>("RecUpdatedBy")
                        .HasColumnName("recupdatedby");

                    b.Property<string>("RegionCode")
                        .HasColumnName("regioncode");

                    b.Property<string>("SextCode")
                        .HasColumnName("sextcode");

                    b.Property<string>("ShortName")
                        .HasColumnName("shortname");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("startdate");

                    b.Property<string>("StreetCode")
                        .HasColumnName("streetcode");

                    b.Property<string>("TerrIfnsFl")
                        .HasColumnName("terrifnsfl");

                    b.Property<string>("TerrIfnsUl")
                        .HasColumnName("terrifnsul");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("updatedate");

                    b.HasKey("RecId");

                    b.ToTable("addrobj");
                });

            modelBuilder.Entity("FiasService.Data.Common.Entities.FiasHouse", b =>
                {
                    b.Property<Guid>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recid");

                    b.Property<Guid>("Aoguid")
                        .HasColumnName("aoguid");

                    b.Property<string>("BuildNum")
                        .HasColumnName("buidnum");

                    b.Property<string>("CadNum")
                        .HasColumnName("cadnum");

                    b.Property<int>("Counter")
                        .HasColumnName("counter");

                    b.Property<int>("DivType")
                        .HasColumnName("divtype");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("enddate");

                    b.Property<int>("EstStatus")
                        .HasColumnName("eststatus");

                    b.Property<Guid>("HouseGuid")
                        .HasColumnName("houseguid");

                    b.Property<Guid>("HouseId")
                        .HasColumnName("houseid");

                    b.Property<string>("HouseNum")
                        .HasColumnName("housenum");

                    b.Property<string>("IfnsFl")
                        .HasColumnName("ifnsfl");

                    b.Property<string>("IfnsUl")
                        .HasColumnName("ifnsul");

                    b.Property<string>("NormDoc")
                        .HasColumnName("normdoc");

                    b.Property<string>("Okato")
                        .HasColumnName("okato");

                    b.Property<string>("Oktmo")
                        .HasColumnName("oktmo");

                    b.Property<string>("PostalCode")
                        .HasColumnName("postalcode");

                    b.Property<string>("RecCode")
                        .HasColumnName("reccode");

                    b.Property<DateTime>("RecCreated")
                        .HasColumnName("reccreated");

                    b.Property<string>("RecCreatedBy")
                        .IsRequired()
                        .HasColumnName("reccreatedby");

                    b.Property<string>("RecDescription")
                        .HasColumnName("recdescription");

                    b.Property<string>("RecName")
                        .IsRequired()
                        .HasColumnName("recname");

                    b.Property<int>("RecState")
                        .HasColumnName("recstate");

                    b.Property<DateTime>("RecUpdated")
                        .HasColumnName("recupdated");

                    b.Property<string>("RecUpdatedBy")
                        .HasColumnName("recupdatedby");

                    b.Property<string>("RegionCode")
                        .HasColumnName("regioncode");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("startdate");

                    b.Property<int>("StatStatus")
                        .HasColumnName("statstatus");

                    b.Property<int>("StrStatus")
                        .HasColumnName("strstatus");

                    b.Property<string>("StructNum")
                        .HasColumnName("structnum");

                    b.Property<string>("TerrIfnsFl")
                        .HasColumnName("terrifnsfl");

                    b.Property<string>("TerrIfnsUl")
                        .HasColumnName("terrifnsul");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("updatedate");

                    b.HasKey("RecId");

                    b.ToTable("house");
                });
#pragma warning restore 612, 618
        }
    }
}
